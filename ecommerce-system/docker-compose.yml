version: '3.8'

services:
  # MongoDB 資料庫 (商品服務專用)
  mongodb:
    image: mongo:7.0
    container_name: ecommerce-mongodb
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ecommerce
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ecommerce-network

  # PostgreSQL 資料庫 (交易資料專用)
  postgresql:
    image: postgres:15-alpine
    container_name: ecommerce-postgresql
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    environment:
      POSTGRES_DB: ecommerce_transactions
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./scripts/postgres-init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./scripts/postgres-schema.sql:/docker-entrypoint-initdb.d/02-schema.sql:ro
      - ./scripts/postgres-seed.sql:/docker-entrypoint-initdb.d/03-seed.sql:ro
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d ecommerce_transactions"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis 快取
  redis:
    image: redis:7-alpine
    container_name: ecommerce-redis
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network

  # Product Service
  product-service:
    build: ./backend/services/merged-services/product-service
    container_name: ecommerce-product-service
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      MINIO_ENDPOINT: ecommerce-minio-files
      MINIO_PORT: 9000
      MINIO_USE_SSL: "false"
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
    ports:
      - "3001:3001"
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network
    volumes:
      - ./backend/services/merged-services/product-service:/app
      - /app/node_modules

  # Auth Service
  auth-service:
    build:
      context: ./backend/services/merged-services
      dockerfile: ./auth-service/Dockerfile
    container_name: ecommerce-auth-service
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    environment:
      NODE_ENV: production
      PORT: 3002
      POSTGRES_HOST: postgresql
      POSTGRES_PORT: 5432
      POSTGRES_DB: ecommerce_transactions
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      JWT_SECRET: your-super-secret-jwt-key-for-development
      JWT_EXPIRES_IN: 24h
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3002:3002"
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network
    volumes:
      - ./backend/services/merged-services/auth-service/logs:/app/logs

  # Dashboard Service
  dashboard-service:
    build:
      context: ./backend/services/merged-services/dashboard-service
      dockerfile: Dockerfile
    container_name: ecommerce-dashboard-service
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    environment:
      NODE_ENV: production
      PORT: 3008
      DB_HOST: mongodb
      DB_PORT: 27017
      DB_NAME: ecommerce_dashboard
      DB_USER: admin
      DB_PASSWORD: password123
      CORS_ORIGIN: http://localhost:3000
      ANALYTICS_SERVICE_URL: http://analytics-service:3006
      ORDER_SERVICE_URL: http://order-service:3003
      PRODUCT_SERVICE_URL: http://product-service:3001
    ports:
      - "3008:3008"
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network
    volumes:
      - ./backend/services/merged-services/dashboard-service/logs:/app/logs

  # AI Service
  ai-service:
    build: ./backend/services/merged-services/ai-service
    container_name: ecommerce-ai-service
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: development
      PORT: 3004
      MILVUS_HOST: milvus-standalone
      MILVUS_PORT: 19530
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ecommerce-ai?authSource=admin
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network
    volumes:
      - ./backend/services/merged-services/ai-service/logs:/app/logs
      - ./backend/services/merged-services/ai-service/models:/app/models
    # restart: unless-stopped  # 暫時禁用重啟，避免循環

  # Order Service
  order-service:
    build: ./backend/services/merged-services/order-service
    container_name: ecommerce-order-service
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    environment:
      NODE_ENV: production
      PORT: 3003
      POSTGRES_HOST: postgresql
      POSTGRES_PORT: 5432
      POSTGRES_DB: ecommerce_transactions
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-for-development
      JWT_EXPIRES_IN: 24h
    ports:
      - "3003:3003"
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network
    volumes:
      - ./backend/services/merged-services/order-service/logs:/app/logs

  # System Service
  system-service:
    build:
      context: ./backend/services/merged-services
      dockerfile: ./system-service/Dockerfile
    container_name: ecommerce-system-service
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: production
      PORT: 3005
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_NAME: ecommerce_system
      DB_USER: postgres
      DB_PASSWORD: postgres123
      MINIO_ENDPOINT: minio-files
      MINIO_PORT: 9000
      MINIO_USE_SSL: "false"
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network
    volumes:
      - ./backend/services/merged-services/system-service/logs:/app/logs

  # Analytics Service
  analytics-service:
    build: ./backend/services/merged-services/analytics-service
    container_name: ecommerce-analytics-service
    ports:
      - "3006:3006"
    environment:
      NODE_ENV: production
      PORT: 3006
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_USERNAME: default
      CLICKHOUSE_PASSWORD: ""
      CLICKHOUSE_DATABASE: analytics
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network
    volumes:
      - ./backend/services/merged-services/analytics-service/logs:/app/logs

  # Notification Service
  notification-service:
    build: ./backend/services/merged-services/notification-service
    container_name: ecommerce-notification-service
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    ports:
      - "3017:3017"
      - "3016:3016"
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network
    volumes:
      - ./backend/services/merged-services/notification-service:/app
      - notification_service_logs:/app/logs

  # Log Service
  log-service:
    build: ./backend/services/merged-services/log-service
    container_name: ecommerce-log-service
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    ports:
      - "3018:3018"
      - "3020:3020"
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network
    volumes:
      - ./backend/services/merged-services/log-service:/app
      - log_service_logs:/app/logs

  # Utility Service
  utility-service:
    build: ./backend/services/merged-services/utility-service
    container_name: ecommerce-utility-service
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    ports:
      - "3019:3019"
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network
    volumes:
      - ./backend/services/merged-services/utility-service:/app
      - utility_service_logs:/app/logs

  # Milvus
  milvus-etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: milvus-etcd
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    environment:
      - ETCDCTL_API=3
      - ETCDCTL_ENDPOINTS=http://milvus-etcd:2379
    command:
      - /usr/local/bin/etcd
      - --name=etcd
      - --data-dir=/etcd
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://milvus-etcd:2379
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-advertise-peer-urls=http://milvus-etcd:2380
      - --initial-cluster=etcd=http://milvus-etcd:2380
      - --initial-cluster-token=etcd-cluster-1
      - --initial-cluster-state=new
    volumes:
      - milvus_etcd_data:/etcd
    networks:
      - ecommerce-network

  milvus-minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: milvus-minio
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    command: server /minio_data --console-address ":9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9003:9001"
      - "9004:9000"
    volumes:
      - milvus_minio_data:/minio_data
    networks:
      - ecommerce-network

  milvus-standalone:
    image: milvusdb/milvus:v2.3.0
    container_name: milvus-standalone
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: milvus-etcd:2379
      MINIO_ADDRESS: milvus-minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus_data:/var/lib/milvus
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network

  # ClickHouse
  clickhouse:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: ecommerce-clickhouse
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    ports:
      - "8123:8123"
      - "9005:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./scripts/clickhouse-init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - ecommerce-network

  # MinIO
  minio-files:
    image: minio/minio:latest
    container_name: ecommerce-minio-files
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9010:9000"
      - "9011:9001"
    volumes:
      - minio_files_data:/data
    networks:
      - ecommerce-network

  # MongoDB Express
  mongo-express:
    image: mongo-express:1.0.0
    container_name: ecommerce-mongo-express
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
    ports:
      - "8081:8081"
    # depends_on: 移除依賴，讓服務獨立啟動
    networks:
      - ecommerce-network

  # Nginx API Gateway
  nginx:
    image: nginx:alpine
    container_name: ecommerce-nginx
    # restart: unless-stopped  # 暫時禁用重啟，避免循環
    ports:
      - "8080:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs:/var/log/nginx
    depends_on:
      - auth-service
      - product-service
      - ai-service
      - order-service
      - system-service
      - analytics-service
      - dashboard-service
    networks:
      - ecommerce-network


volumes:
  mongodb_data:
  postgresql_data:
  redis_data:
  ai_search_models:
  ai_search_logs:
  log_service_logs:
  notification_service_logs:
  utility_service_logs:
  milvus_etcd_data:
  milvus_minio_data:
  milvus_data:
  clickhouse_data:
  minio_files_data:

networks:
  ecommerce-network:
    driver: bridge